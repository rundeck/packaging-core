version: 2.1

parameters:
  CIRCLE_UPSTREAM_PIPELINE_NUMBER: {type: string, default: ""}
  CIRCLE_UPSTREAM_BRANCH: {type: string, default: ""}
  CIRCLE_UPSTREAM_TAG: {type: string, default: ""}

orbs:
  ruby: circleci/ruby@1.6.0

upstream-env: &upstream
  CIRCLE_UPSTREAM_PIPELINE_NUMBER: <<pipeline.parameters.CIRCLE_UPSTREAM_PIPELINE_NUMBER>>
  CIRCLE_UPSTREAM_BRANCH: <<pipeline.parameters.CIRCLE_UPSTREAM_BRANCH>>
  CIRCLE_UPSTREAM_TAG: <<pipeline.parameters.CIRCLE_UPSTREAM_TAG>>

defaults: &defaults
  working_directory: ~/repo
  environment:
    <<: *upstream
    CIRCLE_PIPELINE_NUM: << pipeline.number >>
    TERM: dumb

commands:
  install-packages:
    description: Install apt packages
    steps:
      - run:
          name: Apt install
          command: |
            sudo apt-get update
            sudo apt-get -y install expect
            sudo apt-get -y install rpm
            sudo apt-get -y install dpkg-sig
            sudo apt-get -y install gnupg
  docker-login:
    description: Login to docker
    steps:
      - run:
          name: Login to docker
          command: docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
  git-modules:
    description: Git modules step
    steps:
      - checkout
      - run:
          name: Git modules
          command: |
            sudo sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  submodule-update:
    description: Update submodule
    steps:
      - run:
          name: Update submodule
          command: git submodule update --init --recursive --remote
  aws-install:
    description: Install aws cli
    steps:
      - run:
          name: Install aws cli
          command: pip install awscli --upgrade --user

  package-cloud-install:
    description: Install package cloud
    steps:
      - run:
          name: Install package cloud
          command: gem install package_cloud

  echo-package-cloud:
    description: Echo Package cloud token
    steps:
      - run:
          name: Echo Package cloud token
          command: echo "{\"url\":\"https://packagecloud.io\",\"token\":\"${PKGCLD_WRITE_TOKEN}\"}" > ~/.packagecloud

  build:
    description: Build war
    steps:
      - run:
          name: Build war
          command: |
            source .circleci/circle-shim.sh
            bash scripts/circle-build.sh build
  sign:
    description: Sign war
    steps:
      - run:
          name: Sign war
          command: |
            GPG_TTY=$(tty)
            export GPG_TTY
            source .circleci/circle-shim.sh
            bash scripts/circle-build.sh sign
      - store_artifacts:
          path: ~/repo/packaging/build/distributions
      - store_artifacts:
          path: ~/repo/packaging/artifacts
  test:
    description: Test war
    steps:
      - run:
          name: Test war
          command: |
            source .circleci/circle-shim.sh
            bash scripts/circle-build.sh test
  publish:
    description: Publish
    steps:
      - run:
          name: Publish
          command: |
            source .circleci/circle-shim.sh
            bash scripts/circle-build.sh publish
  publish_war:
    description: Publish war
    steps:
      - run:
          name: Publish war
          command: |
            source .circleci/circle-shim.sh
            bash scripts/circle-build.sh publish_war

jobs:
  build_and_publish:
    <<: *defaults
    machine:
      image: ubuntu-2004:202201-02
    resource_class: large

    parameters:
      submodule:
        description: Should the build use submodules?
        type: boolean
        default: true

    steps:
      - run:
          name: Apt install
          command: |
            sudo apt-get update
            sudo apt-get -y install expect
            sudo apt-get -y install rpm
            sudo apt-get -y install dpkg-sig
            sudo apt-get -y install gnupg
      - docker-login
      - git-modules
      - submodule-update
      - aws-install
      - echo-package-cloud
      - build
      - sign
      - test
      - ruby/install:
          version: '3.0.2'
      - run:
          name: Use ruby 3.0.2
          command: rvm use ruby-3.0.2
      - package-cloud-install
      - when:
          condition:
            matches: { pattern: "/^v.*/", value: <<pipeline.parameters.CIRCLE_UPSTREAM_TAG>> }
          steps:  
            - publish
            - publish_war

stages:
  test: &stage-test
    - Test

filters:
  all: &filter-default
    filters:
      tags: {only: '/^v.*/'}
  tags: &filter-tags
    filters:
      branches: {ignore: /.*/}
      tags: {only: '/^v.*/'}

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_publish:
          name: Build and publish
