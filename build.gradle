buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:4.4.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

apply plugin: 'groovy'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'nebula.ospackage'

import org.rundeck.gradle.PackageTask

def pVersion = findProperty('packageVersion')
def pRelease = findProperty('packageRelease')
def pType = findProperty('packageType')

def pTask = task packageRundeck(type: PackageTask) {
    artifactPath = "$projectDir/artifacts/rundeck.war"
    packageVersion = pVersion
    packageRelease = pRelease
    packageName = 'rundeck'
    packageDescription = 'Rundeck!!!!'
    libDir = "$projectDir/packaging/lib"
}


task packageArtifacts {
    dependsOn packageRundeck
}


bintray {
    user = findProperty("bintrayUser")
    key = findProperty("bintrayApiKey")
    publish = true
    dryRun = (findProperty('dryRun') ?: 'true').toBoolean()

    filesSpec {
        from "$buildDir/distributions"
        include "*.$pType"
        into "./"
    }

    pkg {
        repo = "dev-$pType"
        name = 'rundeck'
        userOrg = 'rundeck'

        version {
            name = "$pVersion/$pRelease"
        }
    }
}
def uploadTask = tasks.findByName('bintrayUpload')
uploadTask.dependsOn pTask

pTask.getOutputs().each { it.getFiles().each {
    println it
}}